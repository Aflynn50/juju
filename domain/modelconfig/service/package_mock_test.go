// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/domain/modelconfig/service (interfaces: CloudService,CloudDefaultsState,StaticConfigProvider)

// Package service is a generated GoMock package.
package service

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	cloud "github.com/juju/juju/cloud"
	config "github.com/juju/juju/environs/config"
)

// MockCloudService is a mock of CloudService interface.
type MockCloudService struct {
	ctrl     *gomock.Controller
	recorder *MockCloudServiceMockRecorder
}

// MockCloudServiceMockRecorder is the mock recorder for MockCloudService.
type MockCloudServiceMockRecorder struct {
	mock *MockCloudService
}

// NewMockCloudService creates a new mock instance.
func NewMockCloudService(ctrl *gomock.Controller) *MockCloudService {
	mock := &MockCloudService{ctrl: ctrl}
	mock.recorder = &MockCloudServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCloudService) EXPECT() *MockCloudServiceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockCloudService) Get(arg0 context.Context, arg1 string) (*cloud.Cloud, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*cloud.Cloud)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockCloudServiceMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCloudService)(nil).Get), arg0, arg1)
}

// MockCloudDefaultsState is a mock of CloudDefaultsState interface.
type MockCloudDefaultsState struct {
	ctrl     *gomock.Controller
	recorder *MockCloudDefaultsStateMockRecorder
}

// MockCloudDefaultsStateMockRecorder is the mock recorder for MockCloudDefaultsState.
type MockCloudDefaultsStateMockRecorder struct {
	mock *MockCloudDefaultsState
}

// NewMockCloudDefaultsState creates a new mock instance.
func NewMockCloudDefaultsState(ctrl *gomock.Controller) *MockCloudDefaultsState {
	mock := &MockCloudDefaultsState{ctrl: ctrl}
	mock.recorder = &MockCloudDefaultsStateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCloudDefaultsState) EXPECT() *MockCloudDefaultsStateMockRecorder {
	return m.recorder
}

// CloudAllRegionDefaults mocks base method.
func (m *MockCloudDefaultsState) CloudAllRegionDefaults(arg0 context.Context, arg1 string) (map[string]map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloudAllRegionDefaults", arg0, arg1)
	ret0, _ := ret[0].(map[string]map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CloudAllRegionDefaults indicates an expected call of CloudAllRegionDefaults.
func (mr *MockCloudDefaultsStateMockRecorder) CloudAllRegionDefaults(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloudAllRegionDefaults", reflect.TypeOf((*MockCloudDefaultsState)(nil).CloudAllRegionDefaults), arg0, arg1)
}

// CloudDefaults mocks base method.
func (m *MockCloudDefaultsState) CloudDefaults(arg0 context.Context, arg1 string) (map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloudDefaults", arg0, arg1)
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CloudDefaults indicates an expected call of CloudDefaults.
func (mr *MockCloudDefaultsStateMockRecorder) CloudDefaults(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloudDefaults", reflect.TypeOf((*MockCloudDefaultsState)(nil).CloudDefaults), arg0, arg1)
}

// UpdateCloudDefaults mocks base method.
func (m *MockCloudDefaultsState) UpdateCloudDefaults(arg0 context.Context, arg1 string, arg2 map[string]string, arg3 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCloudDefaults", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateCloudDefaults indicates an expected call of UpdateCloudDefaults.
func (mr *MockCloudDefaultsStateMockRecorder) UpdateCloudDefaults(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCloudDefaults", reflect.TypeOf((*MockCloudDefaultsState)(nil).UpdateCloudDefaults), arg0, arg1, arg2, arg3)
}

// UpdateCloudRegionDefaults mocks base method.
func (m *MockCloudDefaultsState) UpdateCloudRegionDefaults(arg0 context.Context, arg1, arg2 string, arg3 map[string]string, arg4 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCloudRegionDefaults", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateCloudRegionDefaults indicates an expected call of UpdateCloudRegionDefaults.
func (mr *MockCloudDefaultsStateMockRecorder) UpdateCloudRegionDefaults(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCloudRegionDefaults", reflect.TypeOf((*MockCloudDefaultsState)(nil).UpdateCloudRegionDefaults), arg0, arg1, arg2, arg3, arg4)
}

// MockStaticConfigProvider is a mock of StaticConfigProvider interface.
type MockStaticConfigProvider struct {
	ctrl     *gomock.Controller
	recorder *MockStaticConfigProviderMockRecorder
}

// MockStaticConfigProviderMockRecorder is the mock recorder for MockStaticConfigProvider.
type MockStaticConfigProviderMockRecorder struct {
	mock *MockStaticConfigProvider
}

// NewMockStaticConfigProvider creates a new mock instance.
func NewMockStaticConfigProvider(ctrl *gomock.Controller) *MockStaticConfigProvider {
	mock := &MockStaticConfigProvider{ctrl: ctrl}
	mock.recorder = &MockStaticConfigProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStaticConfigProvider) EXPECT() *MockStaticConfigProviderMockRecorder {
	return m.recorder
}

// CloudConfig mocks base method.
func (m *MockStaticConfigProvider) CloudConfig(arg0 string) (config.ConfigSchemaSource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloudConfig", arg0)
	ret0, _ := ret[0].(config.ConfigSchemaSource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CloudConfig indicates an expected call of CloudConfig.
func (mr *MockStaticConfigProviderMockRecorder) CloudConfig(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloudConfig", reflect.TypeOf((*MockStaticConfigProvider)(nil).CloudConfig), arg0)
}

// ConfigDefaults mocks base method.
func (m *MockStaticConfigProvider) ConfigDefaults() map[string]interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConfigDefaults")
	ret0, _ := ret[0].(map[string]interface{})
	return ret0
}

// ConfigDefaults indicates an expected call of ConfigDefaults.
func (mr *MockStaticConfigProviderMockRecorder) ConfigDefaults() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConfigDefaults", reflect.TypeOf((*MockStaticConfigProvider)(nil).ConfigDefaults))
}
