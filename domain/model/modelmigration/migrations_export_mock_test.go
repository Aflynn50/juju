// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/domain/model/modelmigration (interfaces: ExportService)
//
// Generated by this command:
//
//	mockgen -typed -package modelmigration -destination migrations_export_mock_test.go github.com/juju/juju/domain/model/modelmigration ExportService
//

// Package modelmigration is a generated GoMock package.
package modelmigration

import (
	"context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockExportService is a mock of ExportService interface.
type MockExportService struct {
	ctrl     *gomock.Controller
	recorder *MockExportServiceMockRecorder
}

// MockExportServiceMockRecorder is the mock recorder for MockExportService.
type MockExportServiceMockRecorder struct {
	mock *MockExportService
}

// NewMockExportService creates a new mock instance.
func NewMockExportService(ctrl *gomock.Controller) *MockExportService {
	mock := &MockExportService{ctrl: ctrl}
	mock.recorder = &MockExportServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExportService) EXPECT() *MockExportServiceMockRecorder {
	return m.recorder
}

// GetEnvironVersion mocks base method.
func (m *MockExportService) GetEnvironVersion(arg0 context.Context) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnvironVersion", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEnvironVersion indicates an expected call of GetEnvironVersion.
func (mr *MockExportServiceMockRecorder) GetEnvironVersion(arg0 any) *MockExportServiceGetEnvironVersionCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnvironVersion", reflect.TypeOf((*MockExportService)(nil).GetEnvironVersion), arg0)
	return &MockExportServiceGetEnvironVersionCall{Call: call}
}

// MockExportServiceGetEnvironVersionCall wrap *gomock.Call
type MockExportServiceGetEnvironVersionCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockExportServiceGetEnvironVersionCall) Return(arg0 int, arg1 error) *MockExportServiceGetEnvironVersionCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockExportServiceGetEnvironVersionCall) Do(f func(context.Context) (int, error)) *MockExportServiceGetEnvironVersionCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockExportServiceGetEnvironVersionCall) DoAndReturn(f func(context.Context) (int, error)) *MockExportServiceGetEnvironVersionCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
