name: "Smoke"
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:

permissions:
  contents: read

jobs:

  smoke:
    name: Smoke
    runs-on: [self-hosted, linux, arm64, aws, xlarge]
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
      matrix:
        cloud: ["localhost", "microk8s"]
    steps:

    - name: Install Dependencies
      shell: bash
      run: |
        set -euxo pipefail
        echo "/snap/bin" >> $GITHUB_PATH
        sudo DEBIAN_FRONTEND=noninteractive apt install -y expect

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup LXD
      if: matrix.cloud == 'localhost'
      uses: canonical/setup-lxd@4e959f8e0d9c5feb27d44c5e4d9a330a782edee0

    - name: Setup MicroK8s
      if: matrix.cloud == 'microk8s'
      uses: balchua/microk8s-actions@1e8e626239c2befe7cd5d258c96ae152a7259c74
      with:
        channel: "1.27-strict/stable"
        addons: '["dns", "hostpath-storage", "rbac"]'

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: 'go.mod'
        cache: true

    - name: setup env
      shell: bash
      run: |
        echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

    - name: Install local Juju
      shell: bash
      run: |
        make go-install

    - name: Update microk8s operator image
      if: matrix.cloud == 'microk8s'
      run: |
        # TODO: use temporary Docker account (set DOCKER_USERNAME env var)
        sg snap_microk8s 'make microk8s-operator-update'

    - name: Smoke test (LXD)
      if: matrix.cloud == 'localhost'
      shell: bash
      run: |
        cd tests
        export MODEL_ARCH=$(go env GOARCH)
        ./main.sh -v -s 'test_build' smoke

    - name: Smoke test (MicroK8s)
      if: matrix.cloud == 'microk8s'
      shell: bash
      run: |
        cd tests
        export MODEL_ARCH=$(go env GOARCH)
        sg snap_microk8s './main.sh -c microk8s -v smoke_k8s'
