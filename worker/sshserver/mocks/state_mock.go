// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/worker/sshserver (interfaces: SystemStateGetter)
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/state_mock.go github.com/juju/juju/worker/sshserver SystemStateGetter
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	state "github.com/juju/juju/state"
	gomock "go.uber.org/mock/gomock"
)

// MockSystemStateGetter is a mock of SystemStateGetter interface.
type MockSystemStateGetter struct {
	ctrl     *gomock.Controller
	recorder *MockSystemStateGetterMockRecorder
	isgomock struct{}
}

// MockSystemStateGetterMockRecorder is the mock recorder for MockSystemStateGetter.
type MockSystemStateGetterMockRecorder struct {
	mock *MockSystemStateGetter
}

// NewMockSystemStateGetter creates a new mock instance.
func NewMockSystemStateGetter(ctrl *gomock.Controller) *MockSystemStateGetter {
	mock := &MockSystemStateGetter{ctrl: ctrl}
	mock.recorder = &MockSystemStateGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSystemStateGetter) EXPECT() *MockSystemStateGetterMockRecorder {
	return m.recorder
}

// SystemState mocks base method.
func (m *MockSystemStateGetter) SystemState() (*state.State, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SystemState")
	ret0, _ := ret[0].(*state.State)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SystemState indicates an expected call of SystemState.
func (mr *MockSystemStateGetterMockRecorder) SystemState() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SystemState", reflect.TypeOf((*MockSystemStateGetter)(nil).SystemState))
}
