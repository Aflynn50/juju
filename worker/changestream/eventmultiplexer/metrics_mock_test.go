// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/worker/changestream/eventmultiplexer (interfaces: MetricsCollector)

// Package eventmultiplexer is a generated GoMock package.
package eventmultiplexer

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMetricsCollector is a mock of MetricsCollector interface.
type MockMetricsCollector struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsCollectorMockRecorder
}

// MockMetricsCollectorMockRecorder is the mock recorder for MockMetricsCollector.
type MockMetricsCollectorMockRecorder struct {
	mock *MockMetricsCollector
}

// NewMockMetricsCollector creates a new mock instance.
func NewMockMetricsCollector(ctrl *gomock.Controller) *MockMetricsCollector {
	mock := &MockMetricsCollector{ctrl: ctrl}
	mock.recorder = &MockMetricsCollectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsCollector) EXPECT() *MockMetricsCollectorMockRecorder {
	return m.recorder
}

// DispatchDurationObserve mocks base method.
func (m *MockMetricsCollector) DispatchDurationObserve(arg0 float64, arg1 bool) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DispatchDurationObserve", arg0, arg1)
}

// DispatchDurationObserve indicates an expected call of DispatchDurationObserve.
func (mr *MockMetricsCollectorMockRecorder) DispatchDurationObserve(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DispatchDurationObserve", reflect.TypeOf((*MockMetricsCollector)(nil).DispatchDurationObserve), arg0, arg1)
}

// SubscriptionsDec mocks base method.
func (m *MockMetricsCollector) SubscriptionsDec() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SubscriptionsDec")
}

// SubscriptionsDec indicates an expected call of SubscriptionsDec.
func (mr *MockMetricsCollectorMockRecorder) SubscriptionsDec() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubscriptionsDec", reflect.TypeOf((*MockMetricsCollector)(nil).SubscriptionsDec))
}

// SubscriptionsInc mocks base method.
func (m *MockMetricsCollector) SubscriptionsInc() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SubscriptionsInc")
}

// SubscriptionsInc indicates an expected call of SubscriptionsInc.
func (mr *MockMetricsCollectorMockRecorder) SubscriptionsInc() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubscriptionsInc", reflect.TypeOf((*MockMetricsCollector)(nil).SubscriptionsInc))
}
