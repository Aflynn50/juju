// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/state (interfaces: MachineSaver)
//
// Generated by this command:
//
//	mockgen -package migrationtarget_test -destination state_mock_test.go github.com/juju/juju/state MachineSaver
//

// Package migrationtarget_test is a generated GoMock package.
package migrationtarget_test

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMachineSaver is a mock of MachineSaver interface.
type MockMachineSaver struct {
	ctrl     *gomock.Controller
	recorder *MockMachineSaverMockRecorder
}

// MockMachineSaverMockRecorder is the mock recorder for MockMachineSaver.
type MockMachineSaverMockRecorder struct {
	mock *MockMachineSaver
}

// NewMockMachineSaver creates a new mock instance.
func NewMockMachineSaver(ctrl *gomock.Controller) *MockMachineSaver {
	mock := &MockMachineSaver{ctrl: ctrl}
	mock.recorder = &MockMachineSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMachineSaver) EXPECT() *MockMachineSaverMockRecorder {
	return m.recorder
}

// Save mocks base method.
func (m *MockMachineSaver) Save(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockMachineSaverMockRecorder) Save(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockMachineSaver)(nil).Save), arg0, arg1)
}
