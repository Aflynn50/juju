// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/worker/jwtparser (interfaces: ControllerConfig)
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/controllerconfig_mock.go github.com/juju/juju/worker/jwtparser ControllerConfig
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	controller "github.com/juju/juju/controller"
	gomock "go.uber.org/mock/gomock"
)

// MockControllerConfig is a mock of ControllerConfig interface.
type MockControllerConfig struct {
	ctrl     *gomock.Controller
	recorder *MockControllerConfigMockRecorder
}

// MockControllerConfigMockRecorder is the mock recorder for MockControllerConfig.
type MockControllerConfigMockRecorder struct {
	mock *MockControllerConfig
}

// NewMockControllerConfig creates a new mock instance.
func NewMockControllerConfig(ctrl *gomock.Controller) *MockControllerConfig {
	mock := &MockControllerConfig{ctrl: ctrl}
	mock.recorder = &MockControllerConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockControllerConfig) EXPECT() *MockControllerConfigMockRecorder {
	return m.recorder
}

// ControllerConfig mocks base method.
func (m *MockControllerConfig) ControllerConfig() (controller.Config, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ControllerConfig")
	ret0, _ := ret[0].(controller.Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ControllerConfig indicates an expected call of ControllerConfig.
func (mr *MockControllerConfigMockRecorder) ControllerConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ControllerConfig", reflect.TypeOf((*MockControllerConfig)(nil).ControllerConfig))
}
