// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/internal/objectstore/remote (interfaces: BlobsClient)
//
// Generated by this command:
//
//	mockgen -typed -package remote -destination remote_mock_test.go github.com/juju/juju/internal/objectstore/remote BlobsClient
//

// Package remote is a generated GoMock package.
package remote

import (
	context "context"
	io "io"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockBlobsClient is a mock of BlobsClient interface.
type MockBlobsClient struct {
	ctrl     *gomock.Controller
	recorder *MockBlobsClientMockRecorder
}

// MockBlobsClientMockRecorder is the mock recorder for MockBlobsClient.
type MockBlobsClientMockRecorder struct {
	mock *MockBlobsClient
}

// NewMockBlobsClient creates a new mock instance.
func NewMockBlobsClient(ctrl *gomock.Controller) *MockBlobsClient {
	mock := &MockBlobsClient{ctrl: ctrl}
	mock.recorder = &MockBlobsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlobsClient) EXPECT() *MockBlobsClientMockRecorder {
	return m.recorder
}

// GetObject mocks base method.
func (m *MockBlobsClient) GetObject(arg0 context.Context, arg1, arg2 string) (io.ReadCloser, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObject", arg0, arg1, arg2)
	ret0, _ := ret[0].(io.ReadCloser)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetObject indicates an expected call of GetObject.
func (mr *MockBlobsClientMockRecorder) GetObject(arg0, arg1, arg2 any) *MockBlobsClientGetObjectCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObject", reflect.TypeOf((*MockBlobsClient)(nil).GetObject), arg0, arg1, arg2)
	return &MockBlobsClientGetObjectCall{Call: call}
}

// MockBlobsClientGetObjectCall wrap *gomock.Call
type MockBlobsClientGetObjectCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockBlobsClientGetObjectCall) Return(arg0 io.ReadCloser, arg1 int64, arg2 error) *MockBlobsClientGetObjectCall {
	c.Call = c.Call.Return(arg0, arg1, arg2)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockBlobsClientGetObjectCall) Do(f func(context.Context, string, string) (io.ReadCloser, int64, error)) *MockBlobsClientGetObjectCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockBlobsClientGetObjectCall) DoAndReturn(f func(context.Context, string, string) (io.ReadCloser, int64, error)) *MockBlobsClientGetObjectCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
